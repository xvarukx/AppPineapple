<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnProductos.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABHlJREFUaEPFWW+IDVEUn+68jaL4oGxRlPJBKPLBN3+Kebv+RYjyb0tZ5cN+WLVl
        Y2sVotDK0ioiki0rWwq1hVr5U4rIn7BFbK1serK0W9f53XfnNfP2zL6Z9+7MnPq1++acufO7Z84599w7
        linJZDOLM1nRZNfYJzOO6LQd8SiTtT8D9P9j0nXZWbuNdM22Yy+1llgZfWtKssQab68kSlm7I+PYX4io
        jATHHiBcofs30lgT9agJCHmuyhG76OHfWWLlYZDeUAOcop8Sj5DHV9tZ8YohYAT0Nj6IrNimH2dQ6BUj
        hrmHxgHkj1VrVeunVyhZa3qcXg8E8qoms0izKE9UZTEb61GRo5DaoulEk3xZtHNFA6YCFA1NK6RQ2KTs
        +WIMwaGaXQmhhE0l5kuBHArHapbBkmS1iQqqTs+wDmmqowV1nrsxLkxeP0k2nm+Ul+5elIevtsqZ22aw
        dj44ol7TLRKaWZKhM2f3HPnp20c5MjJSwI9fP+TCvQtY+wIQSlzrodoD7gYDAKlz3e2y50WPrD9dL+fv
        mSe/DnxVpI9eP6I8v+PYdvX74cuH7BheUDPYomlroR4kzqrzpu+1/P3nd8Hjf//9VX8bzjb47DBB6LzX
        ApDzrdToKhkjI4D3Qbb5YrMcv2qcvPHgBkt+4toJ6q30/+z3XQ+ENxdUS8wZGQCIgdTTt09V0mISaw+u
        8dl4J4ak9uqCIe5r+lQ6y+nnIwAVBuQQ35iEV+clj7/47dWPgSGVzLpl4AyMYPrWaSoHQLB4EhWQV1B9
        Er2KJk5pAl7yiPlTN0/6JuGdAKoUN8ZYoNBvt9QellFWimLy7nVuEnee3FFVqnrzVN8YpSG6KP5FJ68s
        H0HkARB+/+VdYRKzds6SZ261qd+z62b7bEtBtRb69IA1KAelyLsh407Cxb3n93y2oUDFh3JAHX3wBhER
        lrybsFiRT3Qel3Un6lS59dqHhbESGpW8V18JEEKPOUUUpEVeNXaV9v+pkSdQ9/wCbUQbpwyDNMnnIbpR
        Rpt55dhIn7xayDooB+ylnLIU0PqmSR7In1bQToySYYAzCMLy/csUQSxA3utJkicMW6utKW43eoUxCAS8
        j6UfYeReS5h8/vjRFYqljZwRB9f76Gnca5hIkuTzEI2aPok6vMURN2foR+/rXuV97GM3tKyXt3tvF7aI
        yZG3h8c51kzNPi+YEWPoAwiDKLZ+7qYcQDe5uXVTUuQlOmhN2yPY2Jfoi0DUJd3X3ydbLh8Kd5ZjFoOF
        5C2WUkcrTRea5LWea7L2QE1i3h4FWrc0XV5Mt9cmQcXmAyJFUw2QWqvaVIdqGLmqFVVzNcuxBV9GcEPR
        AKkCpV7TCyfY8XMDpQEi36ppRROd1EPFAyaJssm7kuJ3slzksAkUfKl0xDPmIbEA1SZ0woYWdK0rxb6Y
        38agqvOxfrFfZ03G+Tw9zGRuDKv2IGiFjUXUeiHqqYe6TwTKmcxwftEUjaMas8SFulmUXYrddiLUpfLF
        uxhS2GEDTrpusulQOykj3ras/3B8ptZL+NPMAAAAAElFTkSuQmCC
</value>
  </data>
</root>